class Solution {
    List<Integer> ans=new ArrayList<>();
   public List<Integer> largestDivisibleSubset(int[] nums) {
           int dp[]=new int[1001];
      Arrays.fill(dp,-1);
      Arrays.sort(nums);
      List<Integer> l=new ArrayList<>();
        solve(nums,0,1,l,dp);
        return ans;
    }
    void solve(int nums[],int i,int prev,List<Integer> l,int dp[]){
        if(i>=nums.length){
            if(l.size()>ans.size()){
                ans.clear();
                ans.addAll(l);
            }
            return ;
        }
    
        //if divisible
        if(l.size()>dp[i] && nums[i]%prev==0 || prev%nums[i]==0){
            dp[i]=l.size();
            l.add(nums[i]);
           solve(nums,i+1,nums[i],l,dp);
            l.remove(l.size()-1);
        }
       solve(nums,i+1,prev,l,dp);
    }
}
