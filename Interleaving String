class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
     int l1=s1.length();int l2=s2.length();
         if(s3.length()!=l1+l2)return false;
        boolean dp[][]=new boolean[l1+1][l2+1];
        dp[0][0]=true;
        for(int i=1;i<=l1;i++){//1 st col
            dp[i][0]=dp[i-1][0] && (s1.charAt(i-1)==s3.charAt(i-1));
        }
        for(int i=1;i<=l2;i++){//1 st row
            dp[0][i]=dp[0][i-1] && (s2.charAt(i-1)==s3.charAt(i-1));
        }
        for(int i=1;i<=l1;i++){
            for(int j=1;j<=l2;j++){
                if(s1.charAt(i-1)==s3.charAt(i+j-1) && s2.charAt(j-1)==s3.charAt(i+j-1)){
                    dp[i][j]=dp[i-1][j] || dp[i][j-1]; }
               else if(s1.charAt(i-1)==s3.charAt(i+j-1)){
                    dp[i][j]=dp[i-1][j];}
               else if(s2.charAt(j-1)==s3.charAt(i+j-1)){
                    dp[i][j]=dp[i][j-1]; } }}
        return dp[l1][l2];
    }
}//TC:O(2^N)
//         if(s1.length()==0)return s2.equals(s3);//if 1st string is empty check for s2 ==s3 if true it returns true
//         if(s2.length()==0)return s1.equals(s3);
    
//         if(s1.charAt(0)==s3.charAt(0) && s2.charAt(0)==s3.charAt(0)){
//             return  isInterleave(s1.substring(1),s2,s3.substring(1)) ||  isInterleave(s1,s2.substring(1),s3.substring(1));
//         }
//         else if(s3.charAt(0)==s1.charAt(0)){
//             return  isInterleave(s1.substring(1),s2,s3.substring(1)); }
//        else if(s3.charAt(0)==s2.charAt(0)){
//             return  isInterleave(s1,s2.substring(1),s3.substring(1)); }
//       return false;
